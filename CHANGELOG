# pdblp 0.1.1

- fixed bug where list of parameters persisted over multiple calls

# pdblp 0.1.2

- added context management support with bopen()
- added bsrch() for Bloomberg SRCH Data
- added parsing to JSON of string representation of Request and Response
messages with parser.py module
- modified ref() to return NaN instead of throwing an error when
fieldException of NOT_APPLICABLE_TO_REF_DATA is given
- modified ref_hist() to support any historical reference date override
instead of just REFERENCE_DATE, e.g. CURVE_DATE

# pdblp 0.1.3

- expose blpapi.Event.TIMEOUT to user through timeout parameter in BCon()
instantiation

# pdblp 0.1.4

- Fix bug accessing null blpapi.element.Element in ref(), see issue #32
- Raise a ValueError for bad inputs to bdh(), see issue #33

# pdblp 0.1.5

- Seperate ref() into bulkref() and ref(), see issue #35
- Update tutorial docs to reflect new functions
- Update Sphinx build process to use sphinx 1.7.5 and provide environment
file for building docs

# pdblp 0.1.6

- Add ability to chain start() method, e.g. con = BCon().start()
- Fix logger to interface with upstream logging libraries
- Add pull request template
- Add NaN support to parser grammar
- Support empty bulkref() requests

# pdblp 0.1.7

- Automate conda and pypi deploys with TravisCI
- Change from unittest to using pytest
- Seperate offline tests which do not require BBG connection
- Refactor event handling and logging into _receive_events()
- Remove restart() method, see issue #46
- Allow constructor to take a blpapi.Session and blpapi.Identity, for SAPI

# pdblp 0.1.8

- Fix bopen() to work with passed session
- Refactor pdblp to use blpapi.Messages parsed into dicts
- Remove conda package building
- Remove testing for python 3.5 and 3.4

# pdblp 0.1.9

 - Allow arbitrary dates formats
